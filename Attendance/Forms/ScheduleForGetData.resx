<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imlButton.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imlButton.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABc
        CgAAAk1TRnQBSQFMAgEBAgEAAZQBAgGUAQIBEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEF4AAw0BEgMPARQDDwEUAw8BFAMPARQDDwEUAw8BFAMPARQDDwEUAw0BEpAA
        AzQBVAHDAoEB/wGqAoEB/wGkAoEB/wGfAoEB/wGaAoEB/wGUAoEB/wGPAoEB/wGJAoEB/wGDAoEB/wOB
        Af8DgQH/A4EB/wOBAf8IAAMcASkCHQE8AdQCAAFlAf4CAAFkAf8CAAFhAf8CAAFfAf8CAAFcAf8CAAFZ
        Af8CAAFXAf8CAAFUAf8CAAFRAf8CAAFOAf4CHQE0AdQDHAEpiAABzwKBAf8B8wGOAY8B/wHmAoEB/wGq
        AoEB/wOBAf8BwwG0AasB/wHGAbsBswH/AcoBwQG8Af8BzgHIAcQB/wOBAf8BngKBAf8BnAKBAf8BmAKB
        Af8DgQH/CAACJQE8AcQCAAHEAf8CAAHBAf8CAAG9Af8CAAG6Af8CAAG2Af8CAAGzAf8CAAGvAf8CAAGs
        Af8CAAGpAf8CAAGlAf8CAAGcAf8CAAGPAf8CJQE1AcSIAAHRAoEC/wGZAZoB/wHsAYYBhwH/AeYCgQH/
        A4EB/wOBAf8BjQKBAf8B7QHgAdgB/wHxAecB4AH/AY8CgQH/AaMCgQH/AaICgQH/AZwCgQH/A4EB/wgA
        AgsBVgHwAgABzAH/AgABxQH/AgABwwH/AgABvgH/AgABxQH/AgABxQH/AgABxQH/AgABxQH/AgABvgH/
        AgABwwH/AgABwwH/AgABmAH/AgsBPwHwiAAB1AKBAv8BnwGgAf8B9QGQAZEB/wHsAYYBhwH/A4EB/wOB
        Af8DgQH/AekB2QHOAf8B7AHdAdQB/wGFAoEB/wGuAoEB/wGqAoEB/wGjAoEB/wOBAf8IAAILAVkB8QIA
        AdEB/wIAAcsB/wJoAdsB/wLYAfEB/wIiAcsB/wIAAcsB/wIAAcsB/wIiAcsB/wLYAfEB/wJoAdsB/wIA
        AcsB/wIAAZ4B/wILAUIB8YgAAdcCgQL/AakBqgH/AfsBnwGgAf8B9QGTAZQB/wOBAf8DgQH/A4EB/wOB
        Af8DgQH/A4EB/wG6AoEB/wGyAoEB/wGqAoEB/wGDAoEB/wgAAgsBWwHxAgAB1gH/AgAB0gH/AkAB3QH/
        AvcB/QH/AuIB9gH/AiIB0QH/AiIB0QH/AuIB9gH/AvcB/QH/AkAB3QH/AgAB0gH/AgABowH/AgsBQwHx
        iAAB2wGDAYQC/wGzAbQC/wGtAa4B/wH8AaMBpAH/AfQBjgGPAf8B7AGGAYcB/wHmAoEB/wHfAoEB/wHX
        AoEB/wHRAoEB/wHBAoEB/wG6AoEB/wGyAoEB/wGJAoEB/wgAAgsBXQHxAgAB2wH/AgAB2AH/AgAB2AH/
        AkcB5AH/AvcB/QH/AuIB9wH/AuIB9wH/AvcB/QH/AkcB5AH/AgAB2AH/AgAB2AH/AgABqAH/AgsBRQHx
        iAAB3wGKAYsC/wG7AbwC/wG2AbcB/wHJAoEB/wHEAoEB/wG+AoEB/wG4AoEB/wGzAoEB/wGtAoEB/wGn
        AoEB/wGhAoEB/wHBAoEB/wG6AoEB/wGPAoEB/wgAAgsBXwHxAgAB4AH/AgAB3wH/AgAB3wH/AgAB3wH/
        AmUB6Qn/AmUB6QH/AgAB3wH/AgAB3wH/AgAB3wH/AgABrQH/AgsBRwHxiAAB4gGRAZIC/wG9Ab4B/wHM
        AoEJ/wH7AfgB9gH/AfYB7gHqAf8B8AHlAd4B/wHqAdsB0gH/AeUB0QHGAf8B4QHKAb0B/wGhAoEB/wHC
        AoEB/wGUAoEB/wgAAgsBYAHxAgAB5QH/AgAB5QH/AgAB5QH/AiIB5gH/AuIB+gH/AvcB/gH/AvcB/gH/
        AuIB+gH/AiIB5gH/AgAB5QH/AgAB5QH/AgABsgH/AgsBSQHxiAAB5QGXAZgC/wG9Ab4B/wHTAoEN/wH7
        AfgB9gH/AfYB7gHqAf8B8AHlAd4B/wHqAdsB0gH/AeUB0QHGAf8BpwKBAf8BzAKBAf8BmgKBAf8IAAIL
        AWIB8QIAAeoB/wIAAesB/wIgAewB/wLiAfsB/wL3Af4B/wJHAfEB/wJHAfEB/wL3Af4B/wLiAfsB/wIg
        AewB/wIAAesB/wIAAbcB/wILAUsB8YgAAekBngGfAv8BvQG+Af8B3AKBEf8B+wH4AfYB/wH2Ae4B6gH/
        AfAB5QHeAf8B6gHbAdIB/wGtAoEB/wHXAoEB/wGfAoEB/wgAAgsBZAHxAgAB7wH/AgAB8QH/AmYB9wH/
        AvYB/gH/AkcB9gH/AgAB8QH/AgAB8QH/AkcB9gH/AvYB/gH/AmYB9wH/AgAB8QH/AgABvAH/AgsBTQHx
        iAAB7QGmAacC/wG9Ab4B/wHmAoEV/wH7AfgB9gH/AfYB7gHqAf8B8AHlAd4B/wGzAoEB/wHfAoEB/wGk
        AoEB/wgAAgsBZQHxAgAB9AH/AgAB+AH/AgAB+AH/Ag0B+AH/AgAB+AH/AgAB+AH/AgAB+AH/AgAB+AH/
        Ag0B+AH/AgAB+AH/AgAB9wH/AgABvwH/AgsBTwHxiAAB8AGsAa0C/wG9Ab4B/wHvAYkBihn/AfsB+AH2
        Af8B9gHuAeoB/wG4AoEB/wOBAf8BqgKBAf8IAAILAV8B8AIAAfkB/wIAAfcB/wIAAfUB/wIAAfMB/wIA
        AfAB/wIAAe0B/wIAAeoB/wIAAegB/wIAAeUB/wIAAeIB/wIAAdYB/wIAAcIB/wILAU4B8IgAAfMBsgGz
        Av8BvQG+Af8B+AGSAZMd/wH7AfgB9gH/Ab4CgQH/AbACgQH/AbACgQH/CAACJQE3AcQCAAHYAf8CAAH3
        Af8CAAH0Af8CAAHwAf8CAAHsAf8CAAHpAf8CAAHkAf8CAAHgAf8CAAHbAf8CAAHXAf8CAAHSAf8CAAG9
        Af8CJQE3AcSIAAH1AbYBtwH/AfUBtgG3Af8B8wGyAbMB/wHxAa0BrgH/Ae4BpwGoAf8B6gGhAaIB/wHn
        AZoBmwH/AeQBkwGUAf8B4AGOAY8B/wHdAYcBiAH/AdoCgQH/AdYCgQH/AdMCgQH/AdECgQH/CAADHAEp
        Ah0BNwHUAgABXAH+AgABZwH/AgABcQH/AgABewH/AgABhgH/AgABhQH/AgABeQH/AgABbwH/AgABZAH/
        AgABWgH+Ah0BNgHUAxwBKdAAAw0BEQMPARQDDwEUAw8BFAMPARQDDwEUAw8BFAMPARQDDwEUAw0BEYwA
        AUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAL/AeABBwQAAYABAQGAAQEEAAGA
        AQEBgAEBBAABgAEBAYABAQQAAYABAQGAAQEEAAGAAQEBgAEBBAABgAEBAYABAQQAAYABAQGAAQEEAAGA
        AQEBgAEBBAABgAEBAYABAQQAAYABAQGAAQEEAAGAAQEBgAEBBAABgAEBAYABAQQAAYABAQGAAQEEAAGA
        AQEBgAEBBAAC/wHgAQcEAAs=
</value>
  </data>
</root>