<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imlButton.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imlButton.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAg
        CQAAAk1TRnQBSQFMAgEBAgEAAYQBBAGEAQQBEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAykBPwFCAUcBQwGzAykBPzAAAw0BEgMPARQDDwEUAw8BFAMPARQDDwEU
        Aw8BFAMPARQDDwEUAw0BEpgAAwkBDAEqAUsBMgHkASsBwQFEAf8BJwFNASoB6gMRARckAAMdASkCVwFZ
        AdQCAAFlAf4CAAFeAf8CAAFbAf8CAAFZAf8CAAFWAf8CAAFTAf8CAAFRAf8CAAFOAf8CAAFLAf8CAAFO
        Af4CVwFYAdQDHQEpkAABQgFEAUIBhwElAbQBUQH/AS8ByQFUAf8BKAG2AUAB/wFDAUYBQwGxJAACWAFZ
        AcQCAAHEAf8CAAHBAf8CAAG9Af8CAAG6Af8CAAG2Af8CAAGzAf8CAAGvAf8CAAGsAf8CAAGpAf8CAAGl
        Af8CAAGcAf8CAAGPAf8DWAHEjAADGgEkARoBaQE8AfgBOAHVAXIB/wEzAc8BYwH/AS8ByQFUAf8BHgGP
        ATIB/wM5AWIgAAIzAVoB8AIAAcwB/wIAAcUB/wIAAcMB/wIAAb4B/wIAAcUB/wIAAcUB/wIAAcUB/wIA
        AcUB/wIAAb4B/wIAAcMB/wIAAcMB/wIAAZgB/wIzAU0B8IwAAUEBSAFFAbMBNwHWAYYB/wE/AdsBhAH/
        ATkB1QFzAf8BMwHPAWMB/wEvAcgBUwH/ASIBVQEtAfEDFwEgHAACNAFZAfECAAHRAf8CAAHLAf8CYgHb
        Af8C2AHxAf8CHAHLAf8CAAHLAf8CAAHLAf8CHAHLAf8C2AHxAf8CYgHbAf8CAAHLAf8CAAGeAf8CNAFQ
        AfGIAAMvAUoBIQGZAWgB/gFQAeYBoQH/AUcB4AGTAf8BPwHbAYQB/wE5AdUBcwH/ATMBzwFjAf8BKwHB
        AU8B/wE/AUUBQAHAAwEBAhgAAjQBWwHxAgAB1gH/AgAB0gH/AjoB3QH/AvcB/QH/AuIB9gH/AhwB0QH/
        AhwB0QH/AuIB9gH/AvcB/QH/AjoB3QH/AgAB0gH/AgABowH/AjQBUQHxhAADBAEGAS8BTQFDAdkBWAHu
        AbYB/wFYAesBrgH/ATMB4wGVAf8BIgHVAW8B/wE5AdoBgAH/ATkB1QFzAf8BMwHPAWMB/wEgAZ4BQAH/
        Az4BcxgAAjQBYAHxAgAB2wH/AgAB2AH/AgAB2AH/AkEB5AH/AvcB/QH/AuIB9wH/AuIB9wH/AvcB/QH/
        AkEB5AH/AgAB2AH/AgAB2AH/AgABqAH/AjQBUwHxhAABPwFAAT8BdgE7AcsBoQH/AU0B8gG9Af8BFgHm
        AZ8B/wERAXUBPAH8ATUBQQE0AdQBFQGyAV8B/wE0AdoBfQH/ATkB1QFzAf8BMwHPAWMB/wEcAWQBMQH3
        Ax4BKxQAAjQBYAHxAgAB4AH/AgAB3wH/AgAB3wH/AgAB3wH/Al8B6Qn/Al8B6QH/AgAB3wH/AgAB3wH/
        AgAB3wH/AgABrQH/AjQBUwHxhAABFwFcAUwB7gEaAfQBuQH/AQEBpwGAAf4BPwFJAUcBuAMfAS0DAgED
        AUMCRAGTAQ4BoAFlAf4BLgHaAX0B/wE5AdUBcwH/AS8BygFfAf8BOAFGATwBzQMEAQUQAAI0AWAB8QIA
        AeUB/wIAAeUB/wIAAeUB/wIcAeYB/wLiAfoB/wL3Af4B/wL3Af4B/wLiAfoB/wIcAeYB/wIAAeUB/wIA
        AeUB/wIAAbIB/wI0AVMB8YQAAUQBSAFFAasBOAFJAT8BzAMtAUcQAAM9AW4BCAGJAWEB/AEnAdwBggH/
        ATkB1QFzAf8BJAGtAU8B/wNDAYMQAAI0AWIB8QIAAeoB/wIAAesB/wIaAewB/wLiAfsB/wL3Af4B/wJB
        AfEB/wJBAfEB/wL3Af4B/wLiAfsB/wIaAewB/wIAAesB/wIAAbcB/wI0AVMB8aQAAzABTQESAW4BVQHz
        AR8B3AGFAf8BNwHUAXIB/wEaAW8BNAH7AyUBNwwAAjQBZAHxAgAB7wH/AgAB8QH/AmAB9wH/AvYB/gH/
        AkEB9gH/AgAB8QH/AgAB8QH/AkEB9gH/AvYB/gH/AmAB9wH/AgAB8QH/AgABvAH/AjQBUwHxqAADIQEx
        ASQBUwFEAeQBGgHVAX0B/wExAdIBbQH/ATABSAE5AdkDBwEKCAACNAFkAfECAAH0Af8CAAH4Af8CAAH4
        Af8CBwH4Af8CAAH4Af8CAAH4Af8CAAH4Af8CAAH4Af8CBwH4Af8CAAH4Af8CAAH3Af8CAAG/Af8CNAFT
        AfGsAAMUARwBNgFIAUEBzwEXAcYBbgH/ASMBuQFcAf8BRAJFAZQIAAIzAV0B8AIAAfkB/wIAAfcB/wIA
        AfUB/wIAAfMB/wIAAfAB/wIAAe0B/wIAAeoB/wIAAegB/wIAAeUB/wIAAeIB/wIAAdYB/wIAAcIB/wIz
        AU4B8LAAAwkBDAFCAUcBQwG0ARcBrQFVAf8BFAGEAUAB/QMsAUUEAANYAcQCAAHYAf8CAAH3Af8CAAH0
        Af8CAAHwAf8CAAHsAf8CAAHpAf8CAAHkAf8CAAHgAf8CAAHbAf8CAAHXAf8CAAHSAf8CAAG9Af8DWAHE
        tAADAgEDAUMBRAFDAZMBGgGLATcB/gErAUoBOQHfBAADHQEpAlcBWQHUAgABXAH+AgABYQH/AgABawH/
        AgABdQH/AgABhgH/AgABhQH/AgABcwH/AgABaQH/AgABXgH/AgABWgH+AlcBWQHUAx0BKbwAAzsBaAND
        AYoMAAMNAREDDwEUAw8BFAMPARQDDwEUAw8BFAMPARQDDwEUAw8BFAMNARGMAAFCAU0BPgcAAT4DAAEo
        AwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAB8QH/AeABBwQAAeAB/wGAAQEEAAHgAf8BgAEBBAABwAF/
        AYABAQQAAcABPwGAAQEEAAGAAR8BgAEBBQABHwGAAQEFAAEPAYABAQUAAQcBgAEBBAABHgEHAYABAQQA
        Af8BAwGAAQEEAAH/AYEBgAEBBAAB/wHBAYABAQQAAf8B4AGAAQEEAAH/AfABgAEBBAAB/wH8AeABBwQA
        Cw==
</value>
  </data>
</root>