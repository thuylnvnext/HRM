<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imlButton.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imlButton.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACa
        BwAAAk1TRnQBSQFMAgEBAgEAAVwBBAFcAQQBEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AFwADNAFUAcMCgQH/AaoCgQH/AaQCgQH/AZ8CgQH/AZoCgQH/AZQCgQH/
        AY8CgQH/AYkCgQH/AYMCgQH/A4EB/wOBAf8DgQH/A4EB/8gAAc8CgQH/AfMBjgGPAf8B5gKBAf8BqgKB
        Af8DgQH/AcMBtAGrAf8BxgG7AbMB/wHKAcEBvAH/Ac4ByAHEAf8DgQH/AZ4CgQH/AZwCgQH/AZgCgQH/
        A4EB/wwAAyIBMgFNAkwBkQMpAT4DCgENGAADAwEEAwcBCowAAdECgQL/AZkBmgH/AewBhgGHAf8B5gKB
        Af8DgQH/A4EB/wGNAoEB/wHtAeAB2AH/AfEB5wHgAf8BjwKBAf8BowKBAf8BogKBAf8BnAKBAf8DgQH/
        CAADBAEGA0gBhQOBAf8BVwJVAboDGwEmAwEBAhAAAwIBAwNMAZMDJAE1AwEBAogAAdQCgQL/AZ8BoAH/
        AfUBkAGRAf8B7AGGAYcB/wOBAf8DgQH/A4EB/wHpAdkBzgH/AewB3QHUAf8BhQKBAf8BrgKBAf8BqgKB
        Af8BowKBAf8DgQH/DAADMAFLA4EB/wOBAf8DSAGFAwgBCwwAAwEBAgMaASQBXAJXAd8DFgEfAwEBAogA
        AdcCgQL/AakBqgH/AfsBnwGgAf8B9QGTAZQB/wOBAf8DgQH/A4EB/wOBAf8DgQH/A4EB/wG6AoEB/wGy
        AoEB/wGqAoEB/wGDAoEB/wwAAwYBCANRAaIBZAJTAfEBYQJaAeQDHQEqCAADBgEIAwoBDgNaAc0DTAGS
        AwIBA4wAAdsBgwGEAv8BswG0Av8BrQGuAf8B/AGjAaQB/wH0AY4BjwH/AewBhgGHAf8B5gKBAf8B3wKB
        Af8B1wKBAf8B0QKBAf8BwQKBAf8BugKBAf8BsgKBAf8BiQKBAf8QAAMSARgBXQJaAcoDgQH/AVkCVwHC
        Aw0BEgMIAQsDCAELAU8CTgGXAWUCUgH0AxUBHZAAAd8BigGLAv8BuwG8Av8BtgG3Af8ByQKBAf8BxAKB
        Af8BvgKBAf8BuAKBAf8BswKBAf8BrQKBAf8BpwKBAf8BoQKBAf8BwQKBAf8BugKBAf8BjwKBAf8UAAMW
        AR8BXgJaAdUDKwH8AVQCUwGsAyMBNANWAbYDgQH/Az0BaZQAAeIBkQGSAv8BvQG+Af8BzAKBCf8B+wH4
        AfYB/wH2Ae4B6gH/AfAB5QHeAf8B6gHbAdIB/wHlAdEBxgH/AeEBygG9Af8BoQKBAf8BwgKBAf8BlAKB
        Af8YAAMXASABXQJZAdIBfwJBAf4DgQH/A4EB/wNeAdqYAAHlAZcBmAL/Ab0BvgH/AdMCgQ3/AfsB+AH2
        Af8B9gHuAeoB/wHwAeUB3gH/AeoB2wHSAf8B5QHRAcYB/wGnAoEB/wHMAoEB/wGaAoEB/xwAAyoBQAFq
        AkEB+QOBAf8BYAJaAd4DDQESmAAB6QGeAZ8C/wG9Ab4B/wHcAoER/wH7AfgB9gH/AfYB7gHqAf8B8AHl
        Ad4B/wHqAdsB0gH/Aa0CgQH/AdcCgQH/AZ8CgQH/FwABAQMdASkBXAJZAc8DgQH/AW0CUQH3A1gB7wNU
        Aa4DBwEJlAAB7QGmAacC/wG9Ab4B/wHmAoEV/wH7AfgB9gH/AfYB7gHqAf8B8AHlAd4B/wGzAoEB/wHf
        AoEB/wGkAoEB/xAAAwQBBgNAAXABXwIhAfsDgQH/A1IBpgMgAS4DTAGTA4EB/wNMAZMDCwEPkAAB8AGs
        Aa0C/wG9Ab4B/wHvAYkBihn/AfsB+AH2Af8B9gHuAeoB/wG4AoEB/wOBAf8BqgKBAf8IAAMSARkDJgE4
        A1YBtgOBAf8DgQH/AVYCVQGxAwgBCwQAAwcBCQFTAlIBqAFfAiEB+wNKAYsDCQEMjAAB8wGyAbMC/wG9
        Ab4B/wH4AZIBkx3/AfsB+AH2Af8BvgKBAf8BsAKBAf8BsAKBAf8EAAMDAQQDOgFiA1YBtgOBAf8DKwH8
        A0QBegMCAQMMAAMGAQgDKwFCAW0CUQH3AVECTwGcjAAB9QG2AbcB/wH1AbYBtwH/AfMBsgGzAf8B8QGt
        Aa4B/wHuAacBqAH/AeoBoQGiAf8B5wGaAZsB/wHkAZMBlAH/AeABjgGPAf8B3QGHAYgB/wHaAoEB/wHW
        AoEB/wHTAoEB/wHRAoEB/wQAAwIBAwE9AjwBZwOBAf8BYgJIAfYDMgFRAwIBAxQAAwMBBAMYASIBQAI/
        AW7MAAMhATABWAJWAbwDKwFCAwEBAqwAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcA
        A/8BAAT/BAABgAEBAv8EAAGAAQEBwwHzBAABgAEBAYEB4QQAAYABAQLBBAABgAEBAcEBgwQAAYABAQHg
        AQcEAAGAAQEB8AEPBAABgAEBAfgBHwQAAYABAQH8AR8EAAGAAQEB8AEPBAABgAEBAeABBwQAAYABAQGA
        AYMEAAGAAgEBwwQAAYABAQEDAeMEAAL/AYcB/wQACw==
</value>
  </data>
</root>