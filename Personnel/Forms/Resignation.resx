<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imlButton.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imlButton.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD+
        CAAAAk1TRnQBSQFMAgEBAgEAAVQBBwFUAQcBEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAykBPwFVAVYBVQGzAykBPzAAAw0BEgMPARQDDwEUAw8BFAMPARQDDwEU
        Aw8BFAMPARQDDwEUAw0BEpgAAwkBDAFMAVUBTgHkASYBwQE/Af8BRwFUAUcB6gMRARckAAMdASkCVwFZ
        AdQCAAFlAf4CAAFeAf8CAAFbAf8CAAFZAf8CAAFWAf8CAAFTAf8CAAFRAf8CAAFOAf8CAAFLAf8CAAFO
        Af4CVwFYAdQDHQEpkAADSAGHASABtAFMAf8BKgHJAU8B/wEjAbYBOwH/A1UBsSQAAlgBWQHEAgABxAH/
        AgABwQH/AgABvQH/AgABugH/AgABtgH/AgABswH/AgABrwH/AgABrAH/AgABqQH/AgABpQH/AgABnAH/
        AgABjwH/A1gBxIwAAxoBJAElAV8BPgH4ATMB1QFtAf8BLgHPAV4B/wEqAckBTwH/ARkBjwEtAf8DOgFi
        IAACMwFaAfACAAHMAf8CAAHFAf8CAAHDAf8CAAG+Af8CAAHFAf8CAAHFAf8CAAHFAf8CAAHFAf8CAAG+
        Af8CAAHDAf8CAAHDAf8CAAGYAf8CMwFNAfCMAAFVAVYBVQGzATIB1gGGAf8BOgHbAYQB/wE0AdUBbgH/
        AS4BzwFeAf8BKgHIAU4B/wE8AVUBQwHxAxcBIBwAAjQBWQHxAgAB0QH/AgABywH/AmIB2wH/AtgB8QH/
        AhwBywH/AgABywH/AgABywH/AhwBywH/AtgB8QH/AmIB2wH/AgABywH/AgABngH/AjQBUAHxiAADLwFK
        ASEBjwFoAf4BSwHmAaEB/wFCAeABkwH/AToB2wGEAf8BNAHVAW4B/wEuAc8BXgH/ASYBwQFKAf8BVwFY
        AVcBwAMBAQIYAAI0AVsB8QIAAdYB/wIAAdIB/wI6Ad0B/wL3Af0B/wLiAfYB/wIcAdEB/wIcAdEB/wLi
        AfYB/wL3Af0B/wI6Ad0B/wIAAdIB/wIAAaMB/wI0AVEB8YQAAwQBBgFTAVgBVgHZAVMB7gG2Af8BUwHr
        Aa4B/wEuAeMBlQH/AR0B1QFqAf8BNAHaAYAB/wE0AdUBbgH/AS4BzwFeAf8BGwGeATsB/wNBAXMYAAI0
        AWAB8QIAAdsB/wIAAdgB/wIAAdgB/wJBAeQB/wL3Af0B/wLiAfcB/wLiAfcB/wL3Af0B/wJBAeQB/wIA
        AdgB/wIAAdgB/wIAAagB/wI0AVMB8YQAA0IBdgE2AcsBoQH/AUgB8gG9Af8BEQHmAZ8B/wEWAXABNwH8
        AVgBWQFXAdQBEAGyAVoB/wEvAdoBeAH/ATQB1QFuAf8BLgHPAV4B/wEuAWQBOAH3Ax4BKxQAAjQBYAHx
        AgAB4AH/AgAB3wH/AgAB3wH/AgAB3wH/Al8B6Qn/Al8B6QH/AgAB3wH/AgAB3wH/AgAB3wH/AgABrQH/
        AjQBUwHxhAABOgFcAVQB7gEVAfQBuQH/AQEBnQF/Af4DVgG4Ax8BLQMCAQMDTAGTAQ4BlgFlAf4BKQHa
        AXgB/wE0AdUBbgH/ASoBygFaAf8BVwFYAVcBzQMEAQUQAAI0AWAB8QIAAeUB/wIAAeUB/wIAAeUB/wIc
        AeYB/wLiAfoB/wL3Af4B/wL3Af4B/wLiAfoB/wIcAeYB/wIAAeUB/wIAAeUB/wIAAbIB/wI0AVMB8YQA
        A1QBqwFYAVkBWAHMAy4BRxAAAz8BbgENAX0BXAH8ASIB3AGCAf8BNAHVAW4B/wEfAa0BSgH/A0cBgxAA
        AjQBYgHxAgAB6gH/AgAB6wH/AhoB7AH/AuIB+wH/AvcB/gH/AkEB8QH/AkEB8QH/AvcB/gH/AuIB+wH/
        AhoB7AH/AgAB6wH/AgABtwH/AjQBUwHxpAADMAFNAS0BaAFVAfMBGgHcAYUB/wEyAdQBbQH/ASEBYgEy
        AfsDJQE3DAACNAFkAfECAAHvAf8CAAHxAf8CYAH3Af8C9gH+Af8CQQH2Af8CAAHxAf8CAAHxAf8CQQH2
        Af8C9gH+Af8CYAH3Af8CAAHxAf8CAAG8Af8CNAFTAfGoAAMhATEBSQFZAVQB5AEVAdUBeAH/ASwB0gFo
        Af8BVQFXAVUB2QMHAQoIAAI0AWQB8QIAAfQB/wIAAfgB/wIAAfgB/wIHAfgB/wIAAfgB/wIAAfgB/wIA
        AfgB/wIAAfgB/wIHAfgB/wIAAfgB/wIAAfcB/wIAAb8B/wI0AVMB8awAAxQBHAFYAlkBzwESAcYBaQH/
        AR4BuQFXAf8DTgGUCAACMwFdAfACAAH5Af8CAAH3Af8CAAH1Af8CAAHzAf8CAAHwAf8CAAHtAf8CAAHq
        Af8CAAHoAf8CAAHlAf8CAAHiAf8CAAHWAf8CAAHCAf8CMwFOAfCwAAMJAQwDVQG0ARIBrQFQAf8BGQGE
        AUAB/QMtAUUEAANYAcQCAAHYAf8CAAH3Af8CAAH0Af8CAAHwAf8CAAHsAf8CAAHpAf8CAAHkAf8CAAHg
        Af8CAAHbAf8CAAHXAf8CAAHSAf8CAAG9Af8DWAHEtAADAgEDA0wBkwEaAYEBNwH+AU8BVwFUAd8EAAMd
        ASkCVwFZAdQCAAFcAf4CAAFhAf8CAAFrAf8CAAF1Af8CAAGGAf8CAAGFAf8CAAFzAf8CAAFpAf8CAAFe
        Af8CAAFaAf4CVwFZAdQDHQEpvAADPAFoA0oBigwAAw0BEQMPARQDDwEUAw8BFAMPARQDDwEUAw8BFAMP
        ARQDDwEUAw0BEYwAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAHxAf8B4AEH
        BAAB4AH/AYABAQQAAeAB/wGAAQEEAAHAAX8BgAEBBAABwAE/AYABAQQAAYABHwGAAQEFAAEfAYABAQUA
        AQ8BgAEBBQABBwGAAQEEAAEeAQcBgAEBBAAB/wEDAYABAQQAAf8BgQGAAQEEAAH/AcEBgAEBBAAB/wHg
        AYABAQQAAf8B8AGAAQEEAAH/AfwB4AEHBAAL
</value>
  </data>
</root>