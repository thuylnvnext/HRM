<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imlButton.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imlButton.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAa
        CQAAAk1TRnQBSQFMAgEBAgEAATQBBwE0AQcBEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAykBPwFMAU8BTAGzAykBPzAAAw0BEgMPARQDDwEUAw8BFAMPARQDDwEU
        Aw8BFAMPARQDDwEUAw0BEpgAAwkBDAE1AU4BOwHkASoBwQFDAf8BMAFQATMB6gMRARckAAMdASkCPgFN
        AdQCAAFlAf4CAAFiAf8CAAFfAf8CAAFdAf8CAAFaAf8CAAFXAf8CAAFVAf8CAAFSAf8CAAFPAf8CAAFO
        Af4CPgFIAdQDHQEpkAADRwGHASQBtAFQAf8BLgHJAVMB/wEnAbYBPwH/AU0BTgFNAbEkAAJHAU8BxAIA
        AcQB/wIAAcEB/wIAAb0B/wIAAboB/wIAAbYB/wIAAbMB/wIAAa8B/wIAAawB/wIAAakB/wIAAaUB/wIA
        AZwB/wIAAY8B/wJHAUwBxIwAAxoBJAEdAWcBPQH4ATcB1QFxAf8BMgHPAWIB/wEuAckBUwH/AR0BjwEx
        Af8DOgFiIAACHAFYAfACAAHMAf8CAAHFAf8CAAHDAf8CAAG+Af8CAAHFAf8CAAHFAf8CAAHFAf8CAAHF
        Af8CAAG+Af8CAAHDAf8CAAHDAf8CAAGYAf8CHAFDAfCMAAFMAU8BTQGzATYB1gGGAf8BPgHbAYQB/wE4
        AdUBcgH/ATIBzwFiAf8BLgHIAVIB/wEoAVUBMwHxAxcBIBwAAhwBWQHxAgAB0QH/AgABywH/AmYB2wH/
        AtgB8QH/AiABywH/AgABywH/AgABywH/AiABywH/AtgB8QH/AmYB2wH/AgABywH/AgABngH/AhwBRgHx
        iAADLwFKASEBlwFoAf4BTwHmAaEB/wFGAeABkwH/AT4B2wGEAf8BOAHVAXIB/wEyAc8BYgH/ASoBwQFO
        Af8BSgFOAUoBwAMBAQIYAAIcAVsB8QIAAdYB/wIAAdIB/wI+Ad0B/wL3Af0B/wLiAfYB/wIgAdEB/wIg
        AdEB/wLiAfYB/wL3Af0B/wI+Ad0B/wIAAdIB/wIAAaMB/wIcAUcB8YQAAwQBBgE8AVIBSQHZAVcB7gG2
        Af8BVwHrAa4B/wEyAeMBlQH/ASEB1QFuAf8BOAHaAYAB/wE4AdUBcgH/ATIBzwFiAf8BHwGeAT8B/wNB
        AXMYAAIcAV8B8QIAAdsB/wIAAdgB/wIAAdgB/wJFAeQB/wL3Af0B/wLiAfcB/wLiAfcB/wL3Af0B/wJF
        AeQB/wIAAdgB/wIAAdgB/wIAAagB/wIcAUkB8YQAAUEBQgFBAXYBOgHLAaEB/wFMAfIBvQH/ARUB5gGf
        Af8BEgF0ATsB/AFBAUkBQAHUARQBsgFeAf8BMwHaAXwB/wE4AdUBcgH/ATIBzwFiAf8BHwFkATMB9wMe
        ASsUAAIcAWAB8QIAAeAB/wIAAd8B/wIAAd8B/wIAAd8B/wJjAekJ/wJjAekB/wIAAd8B/wIAAd8B/wIA
        Ad8B/wIAAa0B/wIcAUwB8YQAASABXAFPAe4BGQH0AbkB/wEBAaUBfwH+AUoBUAFPAbgDHwEtAwIBAwNK
        AZMBDgGeAWUB/gEtAdoBfAH/ATgB1QFyAf8BLgHKAV4B/wFEAUwBRgHNAwQBBRAAAhwBYAHxAgAB5QH/
        AgAB5QH/AgAB5QH/AiAB5gH/AuIB+gH/AvcB/gH/AvcB/gH/AuIB+gH/AiAB5gH/AgAB5QH/AgAB5QH/
        AgABsgH/AhwBTwHxhAABTQFOAU0BqwFFAU8BSQHMAy4BRxAAAz8BbgEJAYYBYAH8ASYB3AGCAf8BOAHV
        AXIB/wEjAa0BTgH/A0YBgxAAAhwBYgHxAgAB6gH/AgAB6wH/Ah4B7AH/AuIB+wH/AvcB/gH/AkUB8QH/
        AkUB8QH/AvcB/gH/AuIB+wH/Ah4B7AH/AgAB6wH/AgABtwH/AhwBUAHxpAADMAFNARgBbQFVAfMBHgHc
        AYUB/wE2AdQBcQH/ARwBbAEzAfsDJQE3DAACHAFkAfECAAHvAf8CAAHxAf8CZAH3Af8C9gH+Af8CRQH2
        Af8CAAHxAf8CAAHxAf8CRQH2Af8C9gH+Af8CZAH3Af8CAAHxAf8CAAG8Af8CHAFSAfGoAAMhATEBLwFU
        AUkB5AEZAdUBfAH/ATAB0gFsAf8BPQFNAUMB2QMHAQoIAAIcAWQB8QIAAfQB/wIAAfgB/wIAAfgB/wIL
        AfgB/wIAAfgB/wIAAfgB/wIAAfgB/wIAAfgB/wILAfgB/wIAAfgB/wIAAfcB/wIAAb8B/wIcAVMB8awA
        AxQBHAFDAU8BSwHPARYBxgFtAf8BIgG5AVsB/wNKAZQIAAIcAV0B8AIAAfkB/wIAAfcB/wIAAfUB/wIA
        AfMB/wIAAfAB/wIAAe0B/wIAAeoB/wIAAegB/wIAAeUB/wIAAeIB/wIAAdYB/wIAAcIB/wIcAU4B8LAA
        AwkBDAFMAU4BTAG0ARYBrQFUAf8BFQGEAUAB/QMtAUUEAAJHAU0BxAIAAdgB/wIAAfcB/wIAAfQB/wIA
        AfAB/wIAAewB/wIAAekB/wIAAeQB/wIAAeAB/wIAAdsB/wIAAdcB/wIAAdIB/wIAAb0B/wJHAU0BxLQA
        AwIBAwNKAZMBGgGJATcB/gE3AU8BQgHfBAADHQEpAj4BTAHUAgABXAH+AgABZQH/AgABbwH/AgABeQH/
        AgABhgH/AgABhQH/AgABdwH/AgABbQH/AgABYgH/AgABWgH+Aj4BTAHUAx0BKbwAAzwBaANIAYoMAAMN
        AREDDwEUAw8BFAMPARQDDwEUAw8BFAMPARQDDwEUAw8BFAMNARGMAAFCAU0BPgcAAT4DAAEoAwABQAMA
        ARADAAEBAQABAQUAAYAXAAP/AQAB8QH/AeABBwQAAeAB/wGAAQEEAAHgAf8BgAEBBAABwAF/AYABAQQA
        AcABPwGAAQEEAAGAAR8BgAEBBQABHwGAAQEFAAEPAYABAQUAAQcBgAEBBAABHgEHAYABAQQAAf8BAwGA
        AQEEAAH/AYEBgAEBBAAB/wHBAYABAQQAAf8B4AGAAQEEAAH/AfABgAEBBAAB/wH8AeABBwQACw==
</value>
  </data>
</root>